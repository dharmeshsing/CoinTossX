plugins {
    id 'org.springframework.boot' version '2.6.2'
    id 'war'
    id 'application'
}

apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'java'

//sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    implementation project(':Common')
    implementation project(':Messages')
    implementation project(':MatchingEngineClient')
    implementation 'uk.co.real-logic:aeron-driver:0.9.4'
    implementation 'uk.co.real-logic:Agrona:0.4.12'
    implementation 'com.carrotsearch:hppc:0.7.1'
    implementation 'com.giffing.wicket.spring.boot.starter:wicket-spring-boot-starter:2.1.8'
    implementation 'org.apache.wicket:wicket-extensions:8.6.1'
    implementation 'org.springframework.boot:spring-boot-starter-web:2.6.2'
    implementation 'org.apache.wicket:wicket-bean-validation:8.6.1'
    implementation 'com.googlecode.wicked-charts:wicked-charts-wicket7:2.0.0'
    implementation 'org.apache.commons:commons-math3:3.2'
    implementation 'org.apache.commons:commons-csv:1.1'
    implementation 'javax.annotation:javax.annotation-api:1.3.2'
    implementation project(':ClientSimulator')
    implementation group: 'org.mapdb', name: 'mapdb', version: '3.0.8'
    providedRuntime("org.springframework.boot:spring-boot-starter-tomcat")

    testImplementation group: 'junit', name: 'junit', version: '4.11'
}

sourceSets.main.resources.srcDir 'src/main/java'

bootWar {
    mainClassName = 'wicket.WicketApplication'
    launchScript()
}

bootJar {
    mainClassName = 'wicket.WicketApplication'
    launchScript()
}

springBoot {
    mainClassName = 'wicket.WicketApplication'
}

def myProps = new Properties()
file(rootProject.projectDir.absolutePath + '/' + project.envProp).withInputStream{
    myProps.load(it)
}

processResources {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    from(sourceSets.main.resources.srcDirs) {
        include '**/*.properties'
        filter(org.apache.tools.ant.filters.ReplaceTokens, tokens: myProps)
    }
}
